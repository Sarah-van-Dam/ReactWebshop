{"ast":null,"code":"// Root URL\nconst rootURL = \"http://localhost:5000/\"; // call post(\"/login/\", postLoginUser);\n\nexport async function checkLoginAPI(email, password) {\n  const response = await fetch(rootURL + \"login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  });\n  return response;\n} // call .post(\"/users\", postCreateUser);\n\nexport const registerUserAPI = (name, email, password) => {\n  return undefined;\n}; // Call .get(\"/users/:email\", getUser);\n\nexport async function getUserAPI(email) {\n  const response = await fetch(rootURL + \"users/\" + email, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // Call .get(\"/users/:email/basket\", getBasket); \n\nexport async function getBasketAPI(email) {\n  const response = await fetch(rootURL + \"users/\" + email + \"/basket\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // call .delete(\"/users/:email/basket\", deleteItemFromBasket);\n\nexport async function removeFromBasketAPI(itemTags, userEmail) {\n  const response = await fetch(rootURL + \"users/\" + userEmail + \"/basket\", {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      item: itemTags\n    })\n  });\n  return response;\n} // call .put(\"/users/:email/basket\", putItemInBasket);\n\nexport async function addToBasketAPI(itemTags, userEmail) {\n  const response = await fetch(rootURL + \"users/\" + userEmail + \"/basket\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      item: itemTags\n    })\n  });\n  return response;\n} // call .get(\"/products/\", getProducts);\n//export const getProducts = () => {}\n\nexport async function getProductsAPI() {\n  const response = await fetch(rootURL + \"products\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // .post(\"/products\", postFilteredProducts());\n\nexport async function postFilteredProductsAPI(categories) {\n  const response = await fetch(rootURL + \"products\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      categories: categories\n    })\n  });\n  return response;\n} // call .get(\"/products/:tags\", getProductById);\n\nexport async function getProductWithIdAPI(tags) {\n  const response = await fetch(rootURL + \"products/\" + tags, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // call .get(\"/categories/:categoryId/products\", getProductByCategory);\n\nexport async function getProductsByCategoryAPI(category) {\n  const response = await fetch(rootURL + \"categories/\" + category + \"/products\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // call .get(\"/categories/\", getCategories);\n\nexport async function getCategoriesAPI() {\n  const response = await fetch(rootURL + \"categories\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // .get(\"/categories/:categoryId/subcategories\", getCategoryById); For getting subcategories","map":{"version":3,"sources":["/Users/sarahvandam/Documents/Uni/Web/ReactWebshop/client/src/apiHelper.ts"],"names":["rootURL","checkLoginAPI","email","password","response","fetch","method","headers","Accept","body","JSON","stringify","registerUserAPI","name","undefined","getUserAPI","json","getBasketAPI","removeFromBasketAPI","itemTags","userEmail","item","addToBasketAPI","getProductsAPI","postFilteredProductsAPI","categories","getProductWithIdAPI","tags","getProductsByCategoryAPI","category","getCategoriesAPI"],"mappings":"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","sourcesContent":["import { getJSDocTags } from \"typescript\";\n\nexport type User  = {\n    name: string;\n    email: string;\n    password: string;\n    basket: string[];\n}\n\nexport type Product = {\n    name: string;\n    price: string;\n    tags: string;\n    description: string;\n    img: string;\n}\n\nexport type Category = {\n    Id: string;\n    types: string[];\n}\n\n// Root URL\nconst rootURL = \"http://localhost:5000/\"\n\n// call post(\"/login/\", postLoginUser);\nexport async function checkLoginAPI(email: string, password: string) { \n    const response = await fetch(rootURL+\"login\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({email:email, password: password})\n      });\n      return response;\n}\n\n// call .post(\"/users\", postCreateUser);\nexport const registerUserAPI = (name: string, email: string, password:string) => {return undefined;}\n\n// Call .get(\"/users/:email\", getUser);\nexport async function getUserAPI(email: string) {\n    const response = await fetch(rootURL+\"users/\"+email, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n\n// Call .get(\"/users/:email/basket\", getBasket); \nexport async function getBasketAPI(email: string) {\n  const response = await fetch(rootURL+\"users/\"+email+\"/basket\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n    },\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n\n\n// call .delete(\"/users/:email/basket\", deleteItemFromBasket);\nexport async function removeFromBasketAPI(itemTags: string, userEmail: string) { \n  const response = await fetch(rootURL+\"users/\"+ userEmail + \"/basket\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({item : itemTags})\n    });\n    return response;\n}\n\n\n// call .put(\"/users/:email/basket\", putItemInBasket);\nexport async function addToBasketAPI(itemTags: string, userEmail: string) { \n  const response = await fetch(rootURL+\"users/\"+ userEmail + \"/basket\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({item : itemTags})\n    });\n    return response;\n}\n\n\n\n// call .get(\"/products/\", getProducts);\n//export const getProducts = () => {}\nexport async function getProductsAPI() {\n    const response = await fetch(rootURL+\"products\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n// .post(\"/products\", postFilteredProducts());\nexport async function postFilteredProductsAPI(categories: Category[]) { \n  const response = await fetch(rootURL+\"products\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({categories : categories})\n    });\n    return response;\n}\n\n// call .get(\"/products/:tags\", getProductById);\nexport async function getProductWithIdAPI(tags: string) {\n  const response = await fetch(rootURL+\"products/\"+tags, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n    },\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// call .get(\"/categories/:categoryId/products\", getProductByCategory);\nexport async function getProductsByCategoryAPI(category: string) {\n  const response = await fetch(rootURL+\"categories/\" + category + \"/products\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n    },\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// call .get(\"/categories/\", getCategories);\nexport async function getCategoriesAPI() {\n    const response = await fetch(rootURL+\"categories\", {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n        },\n  \n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n// .get(\"/categories/:categoryId/subcategories\", getCategoryById); For getting subcategories "]},"metadata":{},"sourceType":"module"}